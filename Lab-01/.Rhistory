a1 <- 12
a2 = 10
a3 <- a1+a2
a3
a1 <- 12
a2 = 10
a3 <- a1+a2
a3
2 +2
v1 = 1
v2 <-1
vector1 <- c(1,2,3)
vector2 <- c(1:10)
help(c)
vector1
vector2
help(rep)
a <- as.integer(a)
b <- 6.89
class(b)
b <-as.integer(b)
b
a <-5; b<-3; c<-1
a+b+c
a+b
z = a < b
z
class(z)
a <- TRUE
b <- FALSE
a & a
a & b
a ! b
a | b
a!
!a
!b
x <- (5<9) $ (6>5)
x <- (5<9) $ (6>=5)
x
x <- (5<9) $ (6>=5)
x = (5<9) $ (6>=5)
x<-(5<9) $ (6>=5)
x <- (5 < 9) & (6 >= 5)
x
a <- "z"
b <- " Le Nhat Tung"
class(a)
class(b)
c<-"9.66"
c
is.numeric(c)
d <- as.numeric(c)
d
d<-as.numeric("9.sau sau")
d
d <-as.numeric("9.66  ")
d
date1 <- "2030-01-15"
class(date1))
class(date1)
as.numeric(date1)
date2 <-as.Date(date1)
class(date2)
as.numeric(date2)
datetam <- as.Date("2004-11-18")
as.numeric(datetam)
datehuy <- as.Date("2004-04-13")
as.numeric(datehuy)
todayFormatted <- format(today, format = "%d-%m-%Y"))
todayFormatted
# sử dụng c()
v1 <- c(1,2,3,4,5)
v1
v2 <- c("A","B","C","D","E")
class(v2)
class(v_mix)
v_mix <- c(1,"A",2,"B",3,"C")
class(v_mix)
# lưu ý
# vector luôn chứa các phần tử cùng kiểu
# Nếu trộn các kiểu, R sẽ chuyển đổi tất cả về cùng dạng
# Thường là chuyển về kiểu dữ liệu "mạnh" nhất:
#
# logical < integer < numeric < character
v_mix <- c(1,"A",2,"B",3,"C")
class(v_mix)
# sử dụng: để tự động tạo
v3 <- c(1:10)
v3
v4 <- c(1.5:3.5)
v4
v5 <- c(1.5:3.5)
v6 <- c(TRUE , FALSE, T, F)
v6
# sử dụng rep
v7 <- rep(1, times = 10)
v7
v8 <- rep(1:3, times = 3)
v8
v9 <- rep(1:3, each = 3)
v9
v10 <- rep(c(1,2), times = 3, each = 3)
v10
# tạo dãy số seq() - Sequence
s1 <- seq(1,5)
s1
s2<- seq(from = 10, to = 20)
s2
s3 <- seq(1,10,y = 2)
s3
s3 <- seq(1,10,y = 2)
s3 <- seq(1,10,by = 2)
s3
s4 <- seq(5,1,by=-1)
s4
today <- as.Date(Sys.Date()))
today <- as.Date(Sys.Date())
today <- as.Date(Sys.Date()
today <- as.Date(Sys.Date())
dates <- seq(today, as.Date("2030-12-31"), by = "day"))
dates <- seq(today, as.Date("2030-12-31"), by ="1 day")
# về các phép toán với vector trong R
x <- c(1:4)
y <- seq(2,8,by=2)
# cộng
x + y
# trừ
x - y
# nhân
x * y
# chia
x / y
# lũy thừa
x ^ y
x <- seq(1,20)
x
x[1]
x[20]
y <- seq(0,10)
y[1]
y[5]
y[-2]
index <- c(3,5,7)
y[index]
index2 <-c(3:5)
y[index2]
c(c(2:5),c(3:7),seq(0:10))
y[7:8]
y[3:2]
y[8:2]
vectorNamed <- c("Tung", "le", "18 years old")
names(vectorNamed) <- c("Name", "Surname", "Age")
vectorNamed
vectorNamed["Age"]
vectorNamed["Surname"]
vectorNamed[c("Surname","Age")]
# thư mục làm việt
getwd()
wd <- "/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01"
setwd(wd)
path <- "data/notepadData.txt"
path <- "~/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/notepadData.txt"
View(table1)
table1 <- read.table(path, header = TRUE, sep = " ")
View(table1)
summary(table$price)
summary(table1$price)
read.table
#### other types
water <- read.csv("~/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/graphics - water quality.csv")
water <- read.csv("~/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/graphics - water quality/water_potability.csv")
View(water)
head(water)
# đọc dữ liệu từ excel
install.packages("readxl")
library(readxl)
loanEXCEL <- read_excel('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/dataset - loan prediction/loan_prediction_excel.xlsx')
View(loanEXCEL)
loanEXCEL2 <- read_excel('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/dataset - loan prediction/loan_prediction_excel.xlsx', sheet = 2)
View(loanEXCEL2)
loanEXCEL3 <- read_excel('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/dataset - loan prediction/loan_prediction_excel.xlsx', sheet = 3)
View(loanEXCEL3)
loanEXCEL3 <- read_excel('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/dataset - loan prediction/loan_prediction_excel.xlsx', sheet = 3)
class(loanEXCEL1)
loanEXCEL1 <- read_excel('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/dataset - loan prediction/loan_prediction_excel.xlsx')
View(loanEXCEL1)
class(loanEXCEL1)
loanEXCEL1 <- as.data.frame(loanEXCEL1)
remove(loanEXCEL3)
ls()
# Lưu trữ xuống file
save(list = ls(all.names = TRUE), file="data/all.rda")
# lưu trữ 1 đối tượng
save(loanEXCEL1, file = "data/loanEXCEL1.rda")
rm(loanEXCEL1)
loanEXCEL1
load("data/loanEXCEL1.rda")
head(loanEXCEL1))
head(loanEXCEL1)
#loading data
alcohol <- read.csv("data/alcohol.csv")
#loading data
alcohol <- read.csv('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/dataset - student alcohol consumption/student-alcohol.csv')
head(alcohol))
head(alcohol)
str(alcohol)
# lấy dữ liệu chỉ mục
head(alcohol[,-1])
alcohol <- alcohol[,-1]
str(alcohol)
summary(alcohol))
summary(alcohol)
###1 missing data
alcohol[!complete.cases(alcohol),]
###1 missing data
alcohol[!complete.cases(alcohol),]
###1 missing data
missing_value <- alcohol[!complete.cases(alcohol),]
missing_value
length(missing_value)
# age and Mjob
summary(alcohol$age)
median(alcohol$age)
median(alcohol$age, na.rm = TRUE)
alcohol$age[is.na(alcohol$age)] <- median(alcohol$age, na.rm = TRUE)
alcohol$age[is.na(alcohol$age)]
# còn hay không
alcohol[!complete.cases(alcohol),]
length(alcohol[!complete.cases(alcohol),])
summary(alcohol)
# Loading data
alcohol <- read.csv("data/dataset - student alcohol consumption/student-alcohol.csv")
head(alcohol)
str(alcohol)
# Lấy dữ liệu bằng chỉ mục
head(alcohol[,-1]) # omit the first column / loại bỏ cột số 1
alcohol <- alcohol[,-1]
str(alcohol)
summary(alcohol)
### 1. Missing data
# có hay không?
alcohol[!complete.cases(alcohol),]
length(alcohol[!complete.cases(alcohol),])
# age and Mjob
summary(alcohol$age)
median(alcohol$age)
median(alcohol$age, na.rm = TRUE)
# điền dữ liệu bằng trung vị
alcohol$age[is.na(alcohol$age)]<-median(alcohol$age, na.rm = TRUE)
alcohol$age[is.na(alcohol$age)]
# còn hay không?
alcohol[!complete.cases(alcohol),]
length(alcohol[!complete.cases(alcohol),])
summary(alcohol)
# other
alcohol$Mjob[63]<-"other"
alcohol[!complete.cases(alcohol),]
### 2. Transforming categorical data
str(alcohol)
# School
summary(factor(alcohol$school))
alcohol$school<-factor(alcohol$school, levels = c("GP", "MS"),
labels = c("Gabriel Pereira", "Mousinho da Silveira")
)
# Sex
summary(factor(alcohol$sex))
alcohol$sex <- factor(alcohol$sex, levels = c("F", "M"),
labels= c("female", "male")
)
# Sex
summary(factor(alcohol$sex))
alcohol$sex <- factor(alcohol$sex, levels = c("F", "M"),
labels = c("female", "male"))
# Address
summary(factor(alcohol$address))
alcohol$address <- factor(alcohol$address, levels = c("R", "U"),
labels = c("rural", "urban"))
# Family size
summary(factor(alcohol$famsize))
alcohol$famsize <- factor(alcohol$famsize, levels = c("GT3", "LE3"),
labels = c("more than 3", "less or equal to 3"))
# Parent's cohabitation status
summary(factor(alcohol$Pstatus))
alcohol$Pstatus <- factor(alcohol$Pstatus, levels = c("A", "T"),
labels = c("living apart", "living together"))
# Mother's education
# Pierwszy factor zapisany liczbami
summary(factor(alcohol$Medu))
alcohol$Medu <- factor(alcohol$Medu, levels = c(0, 1, 2, 3, 4),
labels = c("none", "primary",
"primary higher", "secondary",
"higher"), ordered = TRUE)
# Father's education
summary(factor(alcohol$Fedu))
alcohol$Fedu <- factor(alcohol$Fedu, levels = c(0, 1, 2, 3, 4),
labels = c("none", "primary",
"primary higher", "secondary",
"higher"), ordered = TRUE)
# Reason to choose this school
summary(factor(alcohol$reason))
alcohol$reason <- factor(alcohol$reason)
# Checking the structure after the first corrections
str(alcohol)
summary(alcohol)
# Guardian
summary(factor(alcohol$guardian))
alcohol$guardian <- factor(alcohol$guardian)
# Travel time
summary(alcohol$traveltime)
summary(factor(alcohol$traveltime))
alcohol$traveltime <- factor(alcohol$traveltime, levels = c(1, 2, 3, 4),
labels = c("0-15 min", "15-30 min",
"30-60 min", "above 60 min"),
ordered = TRUE)
# Study time
summary(alcohol$studytime)
summary(factor(alcohol$studytime))
alcohol$studytime <- factor(alcohol$studytime, levels = c(1, 2, 3, 4),
labels = c("0-2 hours", "2-5 hours",
"5-10 hours", "above 10 hours"),
ordered = TRUE)
# School support
summary(factor(alcohol$schoolsup))
alcohol$schoolsup <- factor(alcohol$schoolsup, levels = c("no", "yes"))
# other variables with the same structure we will try to automata
binaryVariables <- c("schoolsup", "famsup", "paid", "activities", "nursery", "higher", "internet", "romantic")
alcohol[, binaryVariables]
lapply(alcohol[, binaryVariables], summary)
lapply(alcohol[, binaryVariables], function(x) {summary(factor(x))})
alcohol$internet[alcohol$internet == 0]
alcohol$internet[alcohol$internet ==0] <- "no"
alcohol$internet[alcohol$internet == 1] # tìm những thằng số 1
alcohol$internet[alcohol$internet == 1] <- "yes" # gán 1 bằng yes
alcohol$internet[alcohol$internet == 0] # tìm những thằng số 0
alcohol$internet[alcohol$internet ==0] <- "no" # gán 0 bằng no
alcohol$internet[alcohol$internet == 1] # tìm những thằng số 1
alcohol$internet[alcohol$internet == 1] <- "yes" # gán 1 bằng yes
alcohol$internet[alcohol$internet == "NO"]
alcohol$internet[alcohol$internet == "NO"] <- "no"
alcohol$internet[alcohol$internet == "YES"]
alcohol$internet[alcohol$internet == "YES"] <- "yes"
summary(factor(alcohol$internet))
lapply(alcohol[, binaryVariables], function(x) {summary(factor(x))})
# tiếp tục kiểm tra các nhóm
str(alcohol)
levels(alcohol[, leveledVariables]
levels(alcohol[, leveledVariables], summary)
clients <- read.csv('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/clients.csv')
head(clients)
str(clients)
# 2. Xem qua cấu trúc dữ liệu và kiểm tra các lớp (classes) đã được gán
# cho các biến trong bộ dữ liệu.
summary(clients)
class(clients)
sapply(clients, class)
# 3. Kiểm tra xem có giá trị nào bị thiếu trong bộ dữ liệu không.
missing_value <- clients[!complete.cases(clients),]
missing_value
length(missing_value)
# a) Những biến nào có chứa giá trị bị thiếu?
missing_value
# b) Điền các giá trị bị thiếu bằng giá trị trung bình hoặc trung vị của biến đó.
mean(clients$MntWines, na.rm = TRUE)
clients$MntWines[is.na(clients$MntWines)] <- mean(clients$MntWines, na.rm = TRUE)
clients$MntWines[is.na(clients$MntWines)]
median(clients$Year_Birth, na.rm = TRUE)
clients$Year_Birth[is.na(clients$Year_Birth)] <- median(clients$Year_Birth, na.rm = TRUE)
clients$Year_Birth[is.na(clients$Year_Birth)]
median(client$Response, na.rm = TRUE)
median(clients$Response, na.rm = TRUE)
clients$Response[is.na(clients$Response)] <- median(clients$Response, na.rm = TRUE)
clients$Response[is.na(clients$Response)]
missing_value <- clients[!complete.cases(clients),]
length(missing_value)
str(clients)
# kiểm tra lại dữ liệu thiếu
missing_value <- clients[!complete.cases(clients),]
missing_value
colSums(is.na(clients))
sum(is.na(clients))
clients <- read.csv('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/clients.csv')
head(clients)
clients <- read.csv('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/clients.csv')
head(clients)
str(clients)
# 2. Xem qua cấu trúc dữ liệu và kiểm tra các lớp (classes) đã được gán
# cho các biến trong bộ dữ liệu.
summary(clients)
class(clients)
sapply(clients, class)
missing_value <- clients[!complete.cases(clients),]
missing_value <- clients[!complete.cases(clients),]
sum(missing_value)
length
clients <- read.csv('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/clients.csv')
head(clients)
str(clients)
# 2. Xem qua cấu trúc dữ liệu và kiểm tra các lớp (classes) đã được gán
# cho các biến trong bộ dữ liệu.
summary(clients)
class(clients)
sapply(clients, class)
missing_value <- clients[!complete.cases(clients),]
length(missing_value)
colSums(is.na(clients))
mean(clients$MntWines, na.rm = TRUE)
clients$MntWines[is.na(clients$MntWines)] <- mean(clients$MntWines, na.rm = TRUE)
clients$MntWines[is.na(clients$MntWines)]
median(clients$Year_Birth, na.rm = TRUE)
clients$Year_Birth[is.na(clients$Year_Birth)] <- median(clients$Year_Birth, na.rm = TRUE)
clients$Year_Birth[is.na(clients$Year_Birth)]
median(clients$Response, na.rm = TRUE)
clients$Response[is.na(clients$Response)] <- median(clients$Response, na.rm = TRUE)
clients$Response[is.na(clients$Response)]
# kiểm tra lại dữ liệu thiếu
missing_value <- clients[!complete.cases(clients),]
missing_value
colSums(is.na(clients))
sum(is.na(clients))
# b) Bạn sẽ dùng đoạn mã nào để hiển thị tất cả các dòng vẫn còn chứa dữ liệu bị thiếu?
colSums(is.na(clients))
# 5. a) Xem xét những biến nào nên chuyển đổi thành kiểu "factor"?
str(clients)
summary(clients)
# Gợi ý: Đây thường là các biến văn bản có một số giá trị cụ thể và lặp lại.
# Chúng cũng có thể là các biến được biểu diễn bằng số nhưng không mang "ý nghĩa số học"
# - ví dụ: biến "education" với các giá trị 2, 3, 4 thực chất đại diện cho các cấp độ
# giáo dục liên tiếp (ý nghĩa logic) thay vì số năm học tập chính xác (ý nghĩa số học).
# b) Bạn sẽ dùng đoạn mã ngắn nhất nào để chuyển đổi biến Marital_Status?
clients$Marital_Status <- as.factor(clients$Marital_Status)
# đếm số lượng giá trị duy nhất của từng biến
sapply(clients, function(x) length(unique(x)))
# 5. a) Xem xét những biến nào nên chuyển đổi thành kiểu "factor"?
str(clients)
# đếm số lượng giá trị duy nhất của từng biến
sapply(clients, function(x) length(unique(x)))
clients <- read.csv('/Users/huy/Documents/phân tích và trực quan hoá dữ liệu/Lab-01/data/clients.csv')
head(clients)
str(clients)
# 2. Xem qua cấu trúc dữ liệu và kiểm tra các lớp (classes) đã được gán
# cho các biến trong bộ dữ liệu.
summary(clients)
class(clients)
sapply(clients, class)
missing_value <- clients[!complete.cases(clients),]
length(missing_value)
colSums(is.na(clients))
mean(clients$MntWines, na.rm = TRUE)
clients$MntWines[is.na(clients$MntWines)] <- mean(clients$MntWines, na.rm = TRUE)
clients$MntWines[is.na(clients$MntWines)]
median(clients$Year_Birth, na.rm = TRUE)
clients$Year_Birth[is.na(clients$Year_Birth)] <- median(clients$Year_Birth, na.rm = TRUE)
clients$Year_Birth[is.na(clients$Year_Birth)]
median(clients$Response, na.rm = TRUE)
clients$Response[is.na(clients$Response)] <- median(clients$Response, na.rm = TRUE)
clients$Response[is.na(clients$Response)]
# kiểm tra lại dữ liệu thiếu
missing_value <- clients[!complete.cases(clients),]
missing_value
sum(is.na(clients))
# 4. a) Kiểm tra xem tất cả các giá trị bị thiếu đã được điền đầy đủ chưa. Nếu chưa, lặp lại bước 3.
missing_value <- clients[!complete.cases(clients),]
missing_value
sum(is.na(clients))
# b) Bạn sẽ dùng đoạn mã nào để hiển thị tất cả các dòng vẫn còn chứa dữ liệu bị thiếu?
colSums(is.na(clients))
# 5. a) Xem xét những biến nào nên chuyển đổi thành kiểu "factor"?
str(clients)
# đếm số lượng giá trị duy nhất của từng biến
sapply(clients, function(x) length(unique(x)))
# các biến nên chuyển đổi
# "Education", "Marital_Status", , "Kidhome", "Teenhome",
# "AcceptedCmp3", "AcceptedCmp4", "AcceptedCmp5",
# "AcceptedCmp1", "AcceptedCmp2", "Complain", "Response"
factor_vars <- c("Education", "Marital_Status", "Kidhome", "Teenhome",
"AcceptedCmp3", "AcceptedCmp4", "AcceptedCmp5",
"AcceptedCmp1", "AcceptedCmp2", "Complain", "Response")
clients[factor_vars] <- lapply(clients[factor_vars], as.factor)
str(clients)
# 6. a) Xem xét biến nào trong số các biến đã xác định ở trên nên được
# chuyển đổi thành kiểu 'ordered factor' (biến phân loại có thứ tự).
# Gợi ý: Biến kiểu 'ordered factor' nên chứa các mức có thứ tự logic
# - ví dụ: biến 'education' với các giá trị 'primary', 'secondary'
# và 'tertiary'. Trong trường hợp này, việc giữ thứ tự các mức là quan trọng.
# Một ví dụ điển hình khác của biến ordered factor là các câu trả lời
# khảo sát sử dụng thang đo Likert (https://en.wikipedia.org/wiki/Likert_scale).
clients$Education <- factor(clients$Education,
levels = c("Primary", "Secondary", "Graduation", "Master", "PhD"),
ordered = TRUE)
# b) Bạn sẽ dùng đoạn mã nào để chuyển đổi biến Education? Giả sử rằng
# 2n nghĩa là giáo dục trung học và graduation tương đương với bảo vệ bằng cử nhân.
# 7. Chuyển đổi các biến đã xác định trong bước 5 và 6 thành các lớp thích hợp.
save(clients, file = "clientsInR.RData")
# 8. Lưu kết quả để tham khảo sau này! Sử dụng file RData với tên "clientsInR".
write.csv(clients, "clients_processed.csv", row.names = FALSE)
